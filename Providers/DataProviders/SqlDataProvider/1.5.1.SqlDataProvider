
IF OBJECT_ID(N'{databaseOwner}[{objectQualifier}Engage_spGetResponses]', N'P') IS NOT NULL
    DROP PROCEDURE {databaseOwner}[{objectQualifier}Engage_spGetResponses]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}Engage_spGetResponses] (
    @EventId int,
    @EventStart datetime,
    @Status nvarchar(100),
    @sortColumn nvarchar(200), 
    @index int, 
    @pageSize int,
    @categoryIds nvarchar(4000)
)
AS
BEGIN

CREATE TABLE #results (
[Id] int NOT NULL IDENTITY(1,1),
[ResponseId] [int]
)
    
DECLARE @sql nvarchar(4000)

SET @sql = N'
    INSERT INTO #results ([ResponseId]) 
    SELECT [ResponseId] 
    FROM {databaseOwner}[{objectQualifier}Engage_Response] r '

IF @categoryIds IS NOT NULL 
BEGIN
    SET @sql = @sql + N'
    JOIN {databaseOwner}[{objectQualifier}Engage_Event] e ON r.EventId = e.EventId '
END

SET @sql = @sql + N'
    WHERE r.EventId = @EventId
      AND r.EventStart = @EventStart
      AND (r.Status = @Status OR @Status IS NULL) ' 
      
IF @categoryIds IS NOT NULL 
BEGIN
    SET @sql = @sql + N' AND e.CategoryId IN (' + @categoryIds + N')'
END
SET @sql = @sql + N' ORDER BY ' + @sortColumn

--PRINT (@sql)
EXEC sp_executesql @sql,
    N'@EventId int,	@EventStart datetime, @Status nvarchar(100)',
    @EventId=@EventId,@EventStart=@EventStart,@Status=@Status

SELECT @@RowCount AS TotalRecords

IF (@PageSize = 0)
    BEGIN
        SELECT re.* FROM #results r
        JOIN {databaseOwner}[{objectQualifier}Engage_Response] re ON (r.ResponseId = re.ResponseId)
    END
ELSE
    BEGIN
        SELECT re.* FROM #results r
        JOIN {databaseOwner}[{objectQualifier}Engage_Response] re ON (r.ResponseId = re.ResponseId)
        WHERE (id >= @index * @PageSize + 1) AND id < (@index * @PageSize) + @PageSize + 1
    END
END
GO
